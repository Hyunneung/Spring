<?xml version="1.0" encoding="UTF-8" ?> <!--  SQL 맵퍼 파일은 xml이기 때문에 제일 먼저 xml 선언이 옵니다. -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Board">

	<!-- 총 게시글 수 -->
	<select id="getListCount" resultType="int">
		select count(*) from board
	</select>
	
	<!-- 총 게시글 리스트 -->
	<select id="getList" parameterType="java.util.Map" resultType="Board">
		select * from 
		  ( select rownum rnum, b.*
		    from 
		         (select board.*, nvl(cnt,0) cnt
                  from 
                  board   left outer join (select board_num, count(*) cnt
                                            from COMMENTS
                                            group by board_num) c
                  on board.board_num = c.board_num
                  order by BOARD_RE_REF desc, 
                  BOARD_RE_SEQ asc     ) b
             where rownum &lt;= #{endrow}     
		   ) 
	     where rnum &gt;= #{startrow} and rnum  &lt;= #{endrow}
	</select>
	
	<!-- 글쓰기 -->
	<insert id="writeBoard" parameterType="board">
		<selectKey resultType="int" order="BEFORE" keyProperty="BOARD_NUM">
			select nvl(max(BOARD_NUM),0)+1 from board
		</selectKey>
		insert into board
		(BOARD_NUM,
		 BOARD_NAME, BOARD_PASS, BOARD_SUBJECT,
		 BOARD_CONTENT, BOARD_FILE, BOARD_ORIGINAL,
		 BOARD_RE_REF,
		 BOARD_RE_LEV, BOARD_RE_SEQ, BOARD_READCOUNT,
		 BOARD_DATE)
		 values
		 (#{BOARD_NUM},
		  #{BOARD_NAME}, #{BOARD_PASS}, #{BOARD_SUBJECT},
		  #{BOARD_CONTENT}, #{BOARD_FILE, jdbcType=VARCHAR},
		  #{BOARD_ORIGINAL, jdbcType=VARCHAR},
		  #{BOARD_NUM},
		  #{BOARD_RE_LEV}, #{BOARD_RE_SEQ}, #{BOARD_READCOUNT},
		  sysdate)
	</insert>
	
	<!-- 답변 글 달기 -->
	<insert id="replyProcess" parameterType="board">
		<selectKey resultType="int" order="BEFORE" keyProperty="BOARD_NUM">
			select nvl(max(BOARD_NUM),0)+1 from board
		</selectKey>
		insert into board
		(BOARD_NUM,
		 BOARD_NAME, BOARD_PASS, BOARD_SUBJECT, BOARD_CONTENT,
		 BOARD_RE_REF, BOARD_RE_LEV, BOARD_RE_SEQ,
		 BOARD_READCOUNT, BOARD_DATE)
		 values
		 (#{BOARD_NUM},
		  #{BOARD_NAME}, #{BOARD_PASS}, #{BOARD_SUBJECT}, #{BOARD_CONTENT},
		  #{BOARD_RE_REF}, #{BOARD_RE_LEV}, #{BOARD_RE_SEQ},
		  #{BOARD_READCOUNT}, sysdate)
	</insert>	
	
	
	
	<!-- 글 상세보기 -->
	<select id="getDetail" parameterType="int" resultType="board">
		select * from board
		where BOARD_NUM = #{num}
	</select>
	
	<!-- 조회수 증가 -->
	<update id="setReadCountUpdate" parameterType="int">
		update board
		set BOARD_READCOUNT = BOARD_READCOUNT + 1
		where BOARD_NUM = #{num}
	</update>
	
	
	<!-- 글 수정 시 비밀번호 맞는지 확인 -->
	<!-- #{board_num}과 #{board_pass}는 map에 저장된 key값 -->
	<select id="isBoardWriter" parameterType="map" resultType="board">
		select * from board
		where BOARD_NUM = #{board_num}
		and   BOARD_PASS = #{board_pass}
	</select>
	<!-- 글 수정 -->
	<update id="modifyProcess" parameterType="board">
		update board
		set BOARD_SUBJECT = #{BOARD_SUBJECT},
			BOARD_CONTENT = #{BOARD_CONTENT},
			BOARD_FILE = #{BOARD_FILE, jdbcType=VARCHAR},
			BOARD_ORIGINAL = #{BOARD_ORIGINAL, jdbcType=VARCHAR}
		where BOARD_NUM = #{BOARD_NUM}
	</update>
	
	
	<!-- 글 삭제 -->
	<delete id="deleteBoard" parameterType="board">
		<![CDATA[
			delete from board
			where  BOARD_RE_REF =  #{BOARD_RE_REF}
			and    BOARD_RE_LEV >= #{BOARD_RE_LEV}
			and    BOARD_RE_SEQ >= #{BOARD_RE_SEQ}
			and    BOARD_RE_SEQ <=( nvl((SELECT min(board_re_seq)-1 
					                     FROM   BOARD 
										 WHERE  BOARD_RE_REF = #{BOARD_RE_REF} 
									     AND    BOARD_RE_LEV = #{BOARD_RE_LEV} 
									     AND    BOARD_RE_SEQ > #{BOARD_RE_SEQ}) ,
									     (SELECT max(board_re_seq) 
									      FROM   BOARD 
										  WHERE  BOARD_RE_REF = #{BOARD_RE_REF} )))
		]]> 							  
	</delete>
	
</mapper>